{"version":3,"file":"static/js/484.697d72ec.chunk.js","mappings":"4KA+FA,QA3FA,SAAqBA,GAAkD,IAAjD,WAAEC,EAAU,cAAEC,EAAa,gBAAEC,GAAiBH,EAClE,MAAM,GAAEI,IAAOC,EAAAA,EAAAA,KACTC,EAAWL,EAAWM,MAAKC,GAAQA,EAAKJ,KAAOK,SAASL,MACvDM,EAAOC,IAAYC,EAAAA,EAAAA,UAASN,EAAWA,EAASI,MAAQ,KACxDG,EAAOC,IAAYF,EAAAA,EAAAA,UAASN,EAAWA,EAASO,MAAQ,KACxDE,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,IAC7BO,GAAWC,EAAAA,EAAAA,MA0DjB,OAxDAC,EAAAA,EAAAA,YAAU,KACHf,GACHgB,MAAM,eAADC,OAAgBnB,IAClBoB,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJhB,EAASgB,EAAKjB,OACdI,EAASa,EAAKd,MAAM,IAErBe,OAAMC,GAAO1B,EAAgB,CAAE2B,QAAS,sCAAoCC,KAAM,WACvF,GACC,CAAC3B,EAAIE,EAAUH,KA+ChB6B,EAAAA,EAAAA,MAAA,QAAMC,SA9BaC,UAEnB,GADAC,EAAMC,kBACD1B,IAAUG,EAEb,YADAK,EAAS,oCAIX,MAAMmB,OAtBkBH,WACxB,IAAKnB,EAAO,OAAO,KACnB,MAAMuB,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQzB,GACxBuB,EAASE,OAAO,gBAAiB,sBAEjC,MAAMf,QAAiBH,MAAM,+DAAgE,CAC3FmB,OAAQ,OACRC,KAAMJ,IAIR,aADmBb,EAASC,QAChBiB,UAAU,EAUCC,GACjBC,EAAkB,CAAEnC,QAAOG,MAAOJ,SAASI,GAAQE,MAAOsB,GAAY/B,EAASS,OAErF,IACE,MAAMU,QAAiBH,MAAM,eAADC,OAAgBnB,GAAM,CAChDqC,OAAQ,MACRK,QAAS,CAAE,eAAgB,oBAC3BJ,KAAMK,KAAKC,UAAUH,KAEjBlB,QAAaF,EAASC,OACxBD,EAASwB,IACX/C,GAAcgD,GAAkBA,EAAeC,KAAI3C,GAASA,EAAKJ,KAAOK,SAASL,GAAMuB,EAAOnB,MAC9FL,EAAgB,CAAE2B,QAAS,gDAAqCC,KAAM,YACtEZ,EAAS,MAETD,EAAS,yDAEb,CAAE,MAAOD,GACPC,EAAS,yDACX,GAI6BkC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEtB,KAAK,OACLuB,YAAY,QACZC,MAAO7C,EACP8C,SAAWC,GAAM9C,EAAS8C,EAAEC,OAAOH,OACnCI,UAAQ,KAEVN,EAAAA,EAAAA,KAAA,SACEtB,KAAK,SACLuB,YAAY,OACZC,MAAO1C,EACP2C,SAAWC,GAAM3C,EAAS2C,EAAEC,OAAOH,OACnCI,UAAQ,KAEVN,EAAAA,EAAAA,KAAA,SACEtB,KAAK,OACLyB,SAAWC,GAAMzC,EAASyC,EAAEC,OAAOE,MAAM,MAE1C3C,IAASoC,EAAAA,EAAAA,KAAA,KAAGQ,MAAO,CAAEC,MAAO,OAAQV,SAAEnC,KACvCoC,EAAAA,EAAAA,KAAA,UAAQtB,KAAK,SAAQqB,SAAC,uBAG5B,C","sources":["components/EditProperty.js"],"sourcesContent":["// src/components/EditProperty.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nfunction EditProperty({ properties, setProperties, setNotification }) {\r\n  const { id } = useParams();\r\n  const property = properties.find(prop => prop.id === parseInt(id));\r\n  const [title, setTitle] = useState(property ? property.title : '');\r\n  const [price, setPrice] = useState(property ? property.price : '');\r\n  const [photo, setPhoto] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!property) {\r\n      fetch(`/properties/${id}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setTitle(data.title);\r\n          setPrice(data.price);\r\n        })\r\n        .catch(err => setNotification({ message: 'Erreur de chargement des données', type: 'error' }));\r\n    }\r\n  }, [id, property, setNotification]);\r\n\r\n  const handlePhotoUpload = async () => {\r\n    if (!photo) return null;\r\n    const formData = new FormData();\r\n    formData.append('file', photo);\r\n    formData.append('upload_preset', 'YOUR_UPLOAD_PRESET'); // Remplacez par votre upload preset\r\n\r\n    const response = await fetch(`https://api.cloudinary.com/v1_1/YOUR_CLOUD_NAME/image/upload`, {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n\r\n    const data = await response.json();\r\n    return data.secure_url;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!title || !price) {\r\n      setError('Veuillez remplir tous les champs');\r\n      return;\r\n    }\r\n\r\n    const photoUrl = await handlePhotoUpload();\r\n    const updatedProperty = { title, price: parseInt(price), photo: photoUrl || property.photo };\r\n\r\n    try {\r\n      const response = await fetch(`/properties/${id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(updatedProperty)\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setProperties(prevProperties => prevProperties.map(prop => (prop.id === parseInt(id) ? data : prop)));\r\n        setNotification({ message: 'Propriété mise à jour avec succès', type: 'success' });\r\n        navigate('/');\r\n      } else {\r\n        setError('Erreur lors de la mise à jour de la propriété');\r\n      }\r\n    } catch (error) {\r\n      setError('Erreur lors de la mise à jour de la propriété');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Titre\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Prix\"\r\n        value={price}\r\n        onChange={(e) => setPrice(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        onChange={(e) => setPhoto(e.target.files[0])}\r\n      />\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <button type=\"submit\">Mettre à jour</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default EditProperty;\r\n"],"names":["_ref","properties","setProperties","setNotification","id","useParams","property","find","prop","parseInt","title","setTitle","useState","price","setPrice","photo","setPhoto","error","setError","navigate","useNavigate","useEffect","fetch","concat","then","response","json","data","catch","err","message","type","_jsxs","onSubmit","async","event","preventDefault","photoUrl","formData","FormData","append","method","body","secure_url","handlePhotoUpload","updatedProperty","headers","JSON","stringify","ok","prevProperties","map","children","_jsx","placeholder","value","onChange","e","target","required","files","style","color"],"sourceRoot":""}