{"version":3,"file":"static/js/372.2f416c74.chunk.js","mappings":"4KA0DA,QAtDA,SAAiBA,GAAuB,IAAtB,gBAAEC,GAAiBD,EACnC,MAAOE,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IAC7BK,GAAWC,EAAAA,EAAAA,MA4BjB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SA3BaC,UAEnB,GADAC,EAAMC,iBACDb,GAAaG,EAIlB,IACE,MAAMW,QAAiBC,MAAM,YAAa,CACxCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEpB,WAAUG,eAE7BkB,QAAaP,EAASQ,OACxBR,EAASS,IACXxB,EAAgB,CAAEyB,QAAS,kDAAgDC,KAAM,YACjFlB,EAAS,YAETD,EAASe,EAAKG,SAAW,gCACzBzB,EAAgB,CAAEyB,QAASH,EAAKG,SAAW,+BAAiCC,KAAM,UAEtF,CAAE,MAAOpB,GACPC,EAAS,gCACTP,EAAgB,CAAEyB,QAAS,+BAAiCC,KAAM,SACpE,MApBEnB,EAAS,mCAoBX,EAI6BoB,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEF,KAAK,OACLG,YAAY,oBACZC,MAAO7B,EACP8B,SAAWC,GAAM9B,EAAY8B,EAAEC,OAAOH,OACtCI,UAAQ,KAEVN,EAAAA,EAAAA,KAAA,SACEF,KAAK,WACLG,YAAY,eACZC,MAAO1B,EACP2B,SAAWC,GAAM3B,EAAY2B,EAAEC,OAAOH,OACtCI,UAAQ,IAET5B,IAASsB,EAAAA,EAAAA,KAAA,KAAGO,MAAO,CAAEC,MAAO,OAAQT,SAAErB,KACvCsB,EAAAA,EAAAA,KAAA,UAAQF,KAAK,SAAQC,SAAC,kBAG5B,C","sources":["components/Register.js"],"sourcesContent":["// src/components/Register.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Register({ setNotification }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!username || !password) {\r\n      setError('Veuillez remplir tous les champs');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch('/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password })\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setNotification({ message: 'Inscription r√©ussie, veuillez vous connecter', type: 'success' });\r\n        navigate('/login');\r\n      } else {\r\n        setError(data.message || 'Erreur lors de l\\'inscription');\r\n        setNotification({ message: data.message || 'Erreur lors de l\\'inscription', type: 'error' });\r\n      }\r\n    } catch (error) {\r\n      setError('Erreur lors de l\\'inscription');\r\n      setNotification({ message: 'Erreur lors de l\\'inscription', type: 'error' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Nom d'utilisateur\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Mot de passe\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n      />\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <button type=\"submit\">Inscription</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"names":["_ref","setNotification","username","setUsername","useState","password","setPassword","error","setError","navigate","useNavigate","_jsxs","onSubmit","async","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","type","children","_jsx","placeholder","value","onChange","e","target","required","style","color"],"sourceRoot":""}